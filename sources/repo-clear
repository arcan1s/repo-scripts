#!/bin/bash
#     repo-scripts is a set of scripts to work with your repository
#     Copyright (C) 2014 Evgeniy Alekseev
#
#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, see http://www.gnu.org/licenses
#     or write to the Free Software Foundation,Inc., 51 Franklin Street,
#     Fifth Floor, Boston, MA 02110-1301  USA


# functions
error_mes() {
  if [ "${USECOLOR}" == "yes" ]; then
    local _red='\e[0;31m'
    local _bwhite='\e[1;37m'
    local _cclose='\e[0m'
  fi
  case "$1" in
    "config"    ) echo "${_red}[EE] ${_bwhite}Configuration file is not set${_cclose}" ;;
    "file"      ) echo "${_red}[EE] ${_bwhite}'$2' is a file${_cclose}"                ;;
    "unknown"   ) echo "${_red}[EE] ${_bwhite}Unknown error${_cclose}"                 ;;
  esac
  exit 1
}
func_help() {
  echo -e "Script written on BASH to clear packages from custom repository"
  echo -e "\nUsage: repo-clear [ -c /etc/repo-scripts.conf ] [ -v | --version ] [ -h | --help ]"
  echo -e "                  PACKAGE1 PACKAGE2 ..."
  echo -e "\nParametrs:"
  echo -e "  PACKAGE1 PACKAGE2 ...     - packaes to removal"
  echo -e "  -c               PATH     - path to configuration file. Default is
                              '/etc/repo-scripts.conf'"
  echo -e "       --nocolor            - force disable colors"
  echo -e "\n  -v   --version            - show version and exit"
  echo -e "  -h   --help               - show this help and exit"
  exit 0
}
func_ver() {
  echo -e "                                   repo-clear                                   "
  echo -e "A set of scripts to work with your repository                                   "
  echo -e "Version : 1.4.1                                                  License : GPLv3"
  echo -e "Author :                                             Evgeniy Alexeev aka arcanis"
  echo -e "E-mail :                                          esalexeev (at) gmail (dot) com"
  exit 0
}
func_remove() {
  local _PACKAGE="$1"
  /usr/bin/rm -f "${_PACKAGE}"{,.sig}
}

CMD_NOCOLOR="no"
CONF_FILE="/etc/repo-scripts.conf"
PKGLIST=()
# parametrs parsing
until [ -z $1 ]; do
  case "$1" in
    "-h" | "--help"    ) func_help                                                    ;;
    "-v" | "--version" ) func_ver                                                     ;;
    "-c"               ) [ -z "$2" ] && error_mes "config" || CONF_FILE="$2" && shift ;;
    "--nocolor"        ) CMD_NOCOLOR="yes"                                            ;;
    *                  ) PKGLIST+=("$1")                                              ;;
  esac
  shift
done
# default values
DBNAME="custom"
REPODIR="${HOME}/arch/repo/"
SYMLINK="no"
USECOLOR="yes"
echo -e "[II] Reading configuration from '${CONF_FILE}'"
source "${CONF_FILE}"
[ "${CMD_NOCOLOR}" == "yes" ] && USECOLOR="no"
if [ "${USECOLOR}" == "yes" ]; then
  bblue='\e[1;34m'
  bwhite='\e[1;37m'
  cclose='\e[0m'
fi
export USECOLOR

# error checking
if [ ! -d "${REPODIR}" ]; then
  [ -e "${REPODIR}" ] && error_mes "file" "${REPODIR}"
  echo -e "${bwhite}[II] ${bblue}Creating directory ${bwhite}'${REPODIR}'${cclose}"
  /usr/bin/mkdir -p "${REPODIR}/"{i686,x86_64} || error_mes "unknown"
fi
if [ ! -d "${REPODIR}/i686" ]; then
  [ -e "${REPODIR}/i686" ] && error_mes "file" "${REPODIR}/i686"
  echo -e "${bwhite}[II] ${bblue}Creating directory ${bwhite}'${REPODIR}/i686'${cclose}"
  /usr/bin/mkdir -p "${REPODIR}/i686" || error_mes "unknown"
fi
if [ ! -d "${REPODIR}/x86_64" ]; then
  [ -e "${REPODIR}/x86_64" ] && error_mes "file" "${REPODIR}/x86_64"
  echo -e "${bwhite}[II] ${bblue}Creating directory ${bwhite}'${REPODIR}/x86_64'${cclose}"
  /usr/bin/mkdir -p "${REPODIR}/x86_64" || error_mes "unknown"
fi


## work block
for ARCH in i686 x86_64; do
  echo -e "${bwhite}[II]${cclose} Clear ${bwhite}${ARCH}${cclose} repo"
  cd "${REPODIR}/${ARCH}"
  for PKGNAME in ${PKGLIST[@]}; do
    echo -e "${bwhite}[II]${cclose} Removal package ${bwhite}${PKGNAME}${cclose} from ${bwhite}${ARCH}${cclose} repo"
    for PKG in $(/usr/bin/find . -name "${PKGNAME}"'*.pkg.tar.xz'); do
      _PKGNAME=$(/usr/bin/package-query -p -f %n "${PKG}")
      if [ "${PKGNAME}" == "${_PKGNAME}" ]; then
        /usr/bin/rm -f "${PKG}"{,.sig}
        /usr/bin/repo-remove "${DBNAME}.db.tar.gz" "${PKGNAME}"
        /usr/bin/repo-remove "${DBNAME}.files.tar.gz" "${PKGNAME}"
      fi
    done
  done
done

# clear broken symlinks
if [ "${SYMLINK}" == "yes" ]; then
  echo -e "${bwhite}[II]${cclose} Clear broken symlinks"
  if [ ! -d "${REPODIR}/non-versioned" ]; then
    [ -e "${REPODIR}/non-versioned" ] && error_mes "file" "${REPODIR}/non-versioned"
    echo -e "${bwhite}[II] ${bblue}Creating directory ${bwhite}'${REPODIR}/non-versioned'${cclose}"
    /usr/bin/mkdir -p "${REPODIR}/non-versioned" || error_mes "unknown"
  fi
  cd "${REPODIR}/non-versioned"
  /usr/bin/find . -type \l -xtype \l -exec /usr/bin/rm {} \;
fi
